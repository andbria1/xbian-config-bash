#!/bin/bash
#
#Copyright 2012 CurlyMo <development@xbian.org>
#
#This file is part of XBian - XBMC on the Raspberry Pi.
#
#XBian is free software: you can redistribute it and/or modify it under the
#terms of the GNU General Public License as published by the Free Software
#Foundation, either version 3 of the License, or (at your option) any later
#version.
#
#XBian is distributed in the hope that it will be useful, but WITHOUT ANY
#WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
#FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#details.
#
#You should have received a copy of the GNU General Public License along
#with XBian. If not, see <http://www.gnu.org/licenses/>
#

#|------------------------------------|
#|          Global variables          |
#|------------------------------------|

# Title at the top of the dialog windows
BACKTITLE="XBian Rescue Shell";

# Standard delimiter
ORIGINALIFS=$IFS;

# Location of the xbian-config script files
BASEPATH="."

#|------------------------------------|
#|           Main program             |
#|------------------------------------|	
function showMainCloseDlg() {

	# Clear FS and MEM caches
	clrFSCacheFn;
	clrMemCacheFn;
	exit 0
}

function showMainMenuDlg() {
	ITEMS="";
	LEVEL="";
	ADD=".";
	CPATH="Rescue";
	
	# Do different things depending on which level we are
	if [ $1 -gt 0 ]; then
		# Show descendant
		LEVEL="$2";
		ADD=".";
	fi

	# Prepare path
	if [ $# -gt 2 ]; then
		CPATH=$3;
	fi
	
	# Trim CPATH
	trimLnFn $CPATH
	CPATH=$TRIMMEDLN;

	# Draw showMainMenuDlg
	IFS=$'\n';
	
	# Get all sub-items that corresponding to the level we are currently
	ITEMS=$(grep "^$LEVEL$ADD[0-9]*:" $BASEPATH/struct);
	
	# Clear caches need by previous function
	clrMemCacheFn;
	
	# Create main menu
	
	# If a certain menu items has no subitems, than we've reach of final function we want to execute
	if [ -z "$ITEMS" ]; then
	
		# Grab the system name of the module we want to execute
		SPECIFICLEVEL=${LEVEL:0:-1};
		MODULE=$(grep ^$SPECIFICLEVEL: $BASEPATH/struct | cut -f2 -d:);

		# Include the module we want to execute
		source $BASEPATH/modules/${MODULE,,}/main
		
		# Change the dialog title to reflect the current module
		TITLE="[${CPATH% > *} > $MODULE]"
		
		# Open the modules gui function
		showGUIFn;
		
		# When we're done, show the main menu again
		IFS=$'\n';
		showMainMenuDlg $(($1-1)) ${LEVEL:0:-2} ${CPATH% > *};
	else
		MENU="";
		I=1;
		for ITEM in ${ITEMS[@]}; do
			IFS=":";
			INFO=($ITEM);
			MENU+="$I%${INFO[1]}!-!\"${INFO[2]}\"%";
			I=$(($I+1));
		done;
		IFS="%";
		# Set the title to the appropriate menu level we're in
		TITLE="["$CPATH"]"

		# Stop the loader
		if [ $(ps -A | grep $LOADER | wc -l) -gt 0 ]; then
			kill -9 $LOADER  > /dev/null 2>&1 &
			wait $! 2>/dev/null
		fi
		
		# Show the main menu
		if [ $1 -eq 0 ]; then
			showMenuDlg "" "$MENU" 7 11 $(($DEFAULTWIDTH+15)) "Select" "Exit";
		else
			showMenuDlg "" "$MENU" 7
		fi
			
		# What there a button pressed?
		#  1: Button
		#  0: Item
		CODE=$?
		if [ $CODE -eq 1 ]; then
			# Which button was pressed?
			#  0: Close
			#  1: Select
			if [ $1 -eq 0 ]; then
				showMainCloseDlg;
			else
				IFS=$'\n';
				showMainMenuDlg $(($1-1)) ${LEVEL:0:-2} ${CPATH% > *};
			fi
		elif [ $CODE -eq 0 ]; then 
			IFS=$'\n';
			MODULE=$(grep "^$LEVEL$RETURN*:" $BASEPATH/struct | cut -f 2 -d:)
			
			showMainMenuDlg $(($1+1)) $LEVEL$RETURN$ADD  "$CPATH > $MODULE";			
		fi;
	fi;
}

LOADER=0;
while [ $(pgrep dialog | wc -l) -eq 0 ]; do 
	for a in \\ \| \/ -; do
		if [ $(pgrep dialog | wc -l) -eq 0 ]; then
			echo -n $a; 
			sleep 0.5; 
			echo -n -e \\r; 
		else
			break;
		fi
	done; 
done &
LOADER=$!

#|------------------------------------|
#|          Include files             |
#|------------------------------------|

# Standard dialogs
source $BASEPATH/functions/dialogs

# Text markup
source $BASEPATH/functions/markup

# System functions
source $BASEPATH/functions/system

#|------------------------------------|
#|          Global variables          |
#|------------------------------------|

# Current dialog title
TITLE="[$_TITLE]"

showMainMenuDlg 0 "";